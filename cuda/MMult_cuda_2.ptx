//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-34841621
// Cuda compilation tools, release 12.6, V12.6.77
// Based on NVVM 7.0.1
//

.version 8.5
.target sm_90
.address_size 64

	// .globl	_Z5sgemmILi16EEviiiPfiS0_iS0_i

.visible .entry _Z5sgemmILi16EEviiiPfiS0_iS0_i(
	.param .u32 _Z5sgemmILi16EEviiiPfiS0_iS0_i_param_0,
	.param .u32 _Z5sgemmILi16EEviiiPfiS0_iS0_i_param_1,
	.param .u32 _Z5sgemmILi16EEviiiPfiS0_iS0_i_param_2,
	.param .u64 _Z5sgemmILi16EEviiiPfiS0_iS0_i_param_3,
	.param .u32 _Z5sgemmILi16EEviiiPfiS0_iS0_i_param_4,
	.param .u64 _Z5sgemmILi16EEviiiPfiS0_iS0_i_param_5,
	.param .u32 _Z5sgemmILi16EEviiiPfiS0_iS0_i_param_6,
	.param .u64 _Z5sgemmILi16EEviiiPfiS0_iS0_i_param_7,
	.param .u32 _Z5sgemmILi16EEviiiPfiS0_iS0_i_param_8
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<30>;
	.reg .b32 	%r<33>;
	.reg .b64 	%rd<34>;


	ld.param.u32 	%M, [_Z5sgemmILi16EEviiiPfiS0_iS0_i_param_0];
	ld.param.u32 	%N, [_Z5sgemmILi16EEviiiPfiS0_iS0_i_param_1];
	ld.param.u32 	%K, [_Z5sgemmILi16EEviiiPfiS0_iS0_i_param_2];
	ld.param.u64 	%A, [_Z5sgemmILi16EEviiiPfiS0_iS0_i_param_3];
	ld.param.u64 	%B, [_Z5sgemmILi16EEviiiPfiS0_iS0_i_param_5];
	ld.param.u64 	%C, [_Z5sgemmILi16EEviiiPfiS0_iS0_i_param_7];
	cvta.to.global.u64 	%BB, %B;
	cvta.to.global.u64 	%AA, %A;
	mov.u32 	%ctaidx, %ctaid.x;
	shl.b32 	%r18, %ctaidx, 4;
	mov.u32 	%tidx, %tid.x;
	add.s32 	%m, %r18, %tidx;
	mov.u32 	%ctaidy, %ctaid.y;
	shl.b32 	%r2, %ctaidy, 4;
	mov.u32 	%tidy, %tid.y;
	add.s32 	%n, %r2, %tidy;
	setp.ge.s32 	%p1, %m, %M;
	setp.ge.s32 	%p2, %n, %N;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$bra_return;

	setp.lt.s32 	%p4, %K, 1;
	mov.f32 	%acc, 0f00000000;
	@%p4 bra 	$bra_assign_c;

	add.s32 	%r22, %K, -1;
	and.b32  	%KMod4, %K, 3; // K%4
	setp.lt.u32 	%p5, %r22, 3; // K<4
	mov.f32 	%acc, 0f00000000;
	mov.u32 	%curK, 0;
	@%p5 bra 	$KMod4Lt4;

	sub.s32 	%RemainK, %K, %KMod4;
	mul.lo.s32 	%r24, %K, %m;
	mul.wide.s32 	%offsetA_r1, %r24, 4;
	mul.wide.s32 	%rd20, %n, 4;
	add.s64 	%curB_c1, %BB, %rd20;
	mul.wide.s32 	%ldbc4, %N, 4;
	mov.f32 	%acc, 0f00000000;
	mov.u32 	%curK, 0;
	mov.u64 	%AAA, %AA;

$MAIN_LOOP:
	add.s64 	%curA, %AAA, %offsetA_r1;
	ld.global.f32 	%valB, [%curB_c1];
	ld.global.f32 	%valA, [%curA];
	fma.rn.f32 	%f14, %valA, %valB, %acc; // round to nearest even, only one rounding compared to 2 in mad
	add.s64 	%curB_c2, %curB_c1, %ldbc4;
	ld.global.f32 	%valB2, [%curB_c2];
	ld.global.f32 	%valA2, [%curA+4];
	fma.rn.f32 	%f17, %valA2, %valB2, %f14;
	add.s64 	%curB_c3, %curB_c2, %ldbc4;
	ld.global.f32 	%valB3, [%curB_c3];
	ld.global.f32 	%valA3, [%curA+8];
	fma.rn.f32 	%f20, %valA3, %valB3, %f17;
	add.s64 	%curB_c4, %curB_c3, %ldbc4;
	add.s64 	%curB_c1, %curB_c4, %ldbc4;
	ld.global.f32 	%valB4, [%curB_c4];
	ld.global.f32 	%valA4, [%curA+12];
	fma.rn.f32 	%acc, %valA4, %valB4, %f20;
	add.s32 	%curK, %curK, 4;
	add.s64 	%AAA, %AAA, 16;
	add.s32 	%RemainK, %RemainK, -4;
	setp.ne.s32 	%p6, %RemainK, 0;
	@%p6 bra 	$MAIN_LOOP;

$KMod4Lt4:
	setp.eq.s32 	%p7, %KMod4, 0;
	@%p7 bra 	$bra_assign_c;

	mad.lo.s32 	%r25, %curK, %N, %tidy;
	add.s32 	%curBi, %r25, %r2;
	mul.wide.s32 	%curB4, %curBi, 4;
	add.s64 	%curBB, %BB, %curB4;
	mul.wide.s32 	%rd11, %N, 4; // ldbc4 calculated again
	mad.lo.s32 	%r27, %K, %m, %curK;
	mul.wide.s32 	%rd26, %r27, 4;
	add.s64 	%curAA, %AA, %rd26;

$KMod4:
	.pragma "nounroll";
	ld.global.f32 	%f23, [%curBB];
	ld.global.f32 	%f24, [%curAA];
	fma.rn.f32 	%acc, %f24, %f23, %acc;
	add.s64 	%curBB, %curBB, %rd11; // ldbc4
	add.s64 	%curAA, %curAA, 4;
	add.s32 	%KMod4, %KMod4, -1;
	setp.ne.s32 	%p8, %KMod4, 0;
	@%p8 bra 	$KMod4;

$bra_assign_c:
	mad.lo.s32 	%r28, %m, %N, %n;
	cvta.to.global.u64 	%CC, %C;
	mul.wide.s32 	%rd28, %r28, 4;
	add.s64 	%rd29, %CC, %rd28;
	st.global.f32 	[%rd29], %acc;

$bra_return:
	ret;

}

